{"ast":null,"code":"import _classCallCheck from\"/Users/viktoriabogomakova/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/viktoriabogomakova/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"patchUserInfo\",value:function patchUserInfo(_ref2){var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}},{key:\"patchAvatar\",value:function patchAvatar(_ref3){var avatar=_ref3.avatar;return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatar})}).then(this._checkResponse);}},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"postCard\",value:function postCard(_ref4){var name=_ref4.name,link=_ref4.link;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"putLike\",value:function putLike(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'PUT',headers:this._headers}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}}]);return Api;}();export{Api as default};export var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-64',headers:{authorization:'a7212cbe-3b54-4bb6-93d8-5cfe2a3625ad','Content-Type':'application/json'}});","map":{"version":3,"names":["Api","_ref","baseUrl","headers","_classCallCheck","_baseUrl","_headers","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","getUserInfo","fetch","method","then","patchUserInfo","_ref2","name","about","body","JSON","stringify","patchAvatar","_ref3","avatar","getCards","postCard","_ref4","link","deleteCard","cardId","putLike","deleteLike","default","api","authorization"],"sources":["/Users/viktoriabogomakova/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["export default class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  \n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  patchUserInfo({ name, about }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    })\n    .then(this._checkResponse)\n  }\n  \n  patchAvatar({ avatar }) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  postCard({ name, link }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkResponse)\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkResponse)\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-64',\n  headers: {\n    authorization: 'a7212cbe-3b54-4bb6-93d8-5cfe2a3625ad',\n    'Content-Type': 'application/json'\n  }\n}); \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}