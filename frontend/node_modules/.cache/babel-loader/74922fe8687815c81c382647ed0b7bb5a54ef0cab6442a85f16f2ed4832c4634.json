{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n  }\n\n  //checking the server response\n  _handleResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n\n    //reject promise\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  //edit profile\n  async editProfileUserApi(data) {\n    const response = await fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    });\n    return this._handleResponse(response);\n  }\n\n  //downloading user info trom the server\n  async getRealUserInfo() {\n    const response = await fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    return this._handleResponse(response);\n  }\n  async getInitialCards() {\n    const response = await fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    return this._handleResponse(response);\n  }\n  async createNewCardApi(data) {\n    const response = await fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify(data)\n    });\n    return this._handleResponse(response);\n  }\n  async removeCard(cardId) {\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    return this._handleResponse(response);\n  }\n  async addLike(cardId) {\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    return this._handleResponse(response);\n  }\n\n  //remove like for the cards\n  async removeLike(cardId) {\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    return this._handleResponse(response);\n  }\n  async updateProfileUserAvatar(data) {\n    const response = await fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    });\n    return this._handleResponse(response);\n  }\n}\nconst api = new Api({\n  baseUrl: \"http://localhost:3000\"\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_handleResponse","res","ok","Promise","resolve","json","reject","status","editProfileUserApi","data","response","fetch","method","headers","authorization","localStorage","getItem","body","JSON","stringify","name","about","getRealUserInfo","getInitialCards","createNewCardApi","removeCard","cardId","addLike","removeLike","updateProfileUserAvatar","avatar","api"],"sources":["C:/Users/uzer5075/Desktop/ВИКА15СДЕЛАТЬ/Танин/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n  }\r\n\r\n  //checking the server response\r\n  _handleResponse(res) {\r\n    if (res.ok) {\r\n      return Promise.resolve(res.json());\r\n    }\r\n\r\n    //reject promise\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  //edit profile\r\n  async editProfileUserApi(data) {\r\n    const response = await fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    });\r\n    return this._handleResponse(response);\r\n  }\r\n\r\n  //downloading user info trom the server\r\n  async getRealUserInfo() {\r\n    const response = await fetch(`${this._baseUrl}/users/me`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    return this._handleResponse(response);\r\n  }\r\n\r\n\r\n  async getInitialCards() {\r\n    const response = await fetch(`${this._baseUrl}/cards`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    return this._handleResponse(response);\r\n  }\r\n\r\n  \r\n  async createNewCardApi(data) {\r\n    const response = await fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return this._handleResponse(response);\r\n  }\r\n\r\n\r\n  async removeCard(cardId) {\r\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    return this._handleResponse(response);\r\n  }\r\n\r\n \r\n  async addLike(cardId) {\r\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    return this._handleResponse(response);\r\n  }\r\n\r\n  //remove like for the cards\r\n  async removeLike(cardId) {\r\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    return this._handleResponse(response);\r\n  }\r\n\r\n\r\n  async updateProfileUserAvatar(data) {\r\n    const response = await fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    });\r\n    return this._handleResponse(response);\r\n  }\r\n}\r\n\r\n\r\nconst api = new Api({\r\n  baseUrl: \"http://localhost:3000\",\r\n});\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}